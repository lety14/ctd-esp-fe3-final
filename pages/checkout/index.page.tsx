import { Card, CircularProgress, Typography } from "@mui/material";
import CardComponent from "dh-marvel/components/card/card.component";
import StepperForm from "dh-marvel/components/forms/stepper-form.component";
import LayoutCheckout from "dh-marvel/components/layouts/layout-checkout";
import { getComicsById } from "dh-marvel/services/comic/comic.service";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { IComic, IComicResponse } from "types/IComic.type";

const Checkout: NextPage = () => {
  const router = useRouter();
  const { comic } = router.query;
  const [comicData, setComicData] = useState<IComic>();
  console.log(comic);

  useEffect(() => {
    const id = parseInt(comic as string);

    if (comic) {
      getComicsById(id).then((data: IComicResponse) => {
        // if (data?.code === 200) {
        // setComicData(data);
        console.log(data);
        // }
      });
    }
  }, [comic]);

  if (!comic) {
    return (
      <>
        <CircularProgress />
      </>
    );
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Card>
        <StepperForm />
        {comicData ? (
          <CardComponent comic={comicData} />
        ) : (
          <Typography>Loading...</Typography>
        )}
      </Card>
    </div>
  );
};
(Checkout as any).Layout = LayoutCheckout;

export default Checkout;
